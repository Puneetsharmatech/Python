Print function:   Print("hello world");
   in this syntax, value between quotes ("") called string.
   in this print is function. Function is a part of code that used to cause an error or evaluate value. we have python built in function and we can create.

Function Execution in python:

1. Checks function name
2. check arguments passed
3. jumps code into function
4. Execute the function
5. Returns your code 
6. Resume execution 


Print("hello world \n  hello to all world"); 
output: hello world
        hello to world
in this case \n means new line. this prints as a new line


If we pass multiple argument like 
»>> print ("Hello", "future", "Python", "programmer!" )
Hello future Python programmer!
it combine all 


>>>
print ("Hello!", end="");\
print("Python is a great language")
Hello!Python is a great language

in above syntax end="" combine both lines with define string.
>>>
print ("Hello!", end="!");\
print("Python is a great language")
Hello!! Python is a great language
>>> print （"Hello！"， end="
... print("Python is a great language")
Hello!"Python is a great language


Another arguement is sep=""
it will seprate every string with define string, number etc.
>>>
print ("Hello", "future", "Python", "programmer!", sep="-");
Hello-future-Python-programmer !








Literals

A literals is data which values are determined by literals. e:g string "hello world", number 20 etc.
In python we have four types of literals.
1.Integers e:g 1, 345  
1.a octal numbers e:g 0o123 for here base is 8
1.b hexadecimal numbers e:g 0x123 in this base is 16
2.floating point number e:g 45.3, -56.2
3.strings e:g "hello", 'hello'
4.booleans e:g TRUE(1) or FALSE(0)







Operators

Python has seven types of airthmetic operators;

Add     +
Subtract -
Multiply *
Divide  /  it return value in float
Floor Divide //  in return value in float if given number's output will not in float. also it round off the value in float
Modulo  %  with this, we can caluclate remainder after division
Exponential  **





Inputs:
The input() function in Python is used to take input from the user. It reads a line of text from the standard input (usually the keyboard), converts it to a string, and returns it.
Example of input function:
name = input("what is your name");
Output:>>>> what is your name 
here you can enter your name. when ever you call name function it will display your name;
print(name);
Input function always works strings 

if you w>>> age = input("how old are you?")
how old are you?23
>>> print(age - 10);
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: unsupported operand type(s) for -: 'str' and 'int'
>>> ant to work with intergers than you have to use integer function;

to solve this use int() function:
>>> age = input("what is your age");
what is your age23
>>> print(int(age)- 10)
13

• Prompts the user to input some data from the console
• It accepts an optional parameter that can be used in order to write a message before the user input
• Always returns a string
• A program that doesn't use any input function, is called a deaf program








String methods

with + operator you can use for concatenate string
print("my"+" "+ "name");
output>>>>> my name

with  * operator  you can repeat the string;

print("ha"*10);
output>>>>>>>> hahahahahahahahahaha

with str function we can case numeric value into string.










